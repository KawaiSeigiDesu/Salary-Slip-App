#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Salary_Slip_App.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SalarySlipApp")]
	public partial class SalarySlipAppDBMLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment_Table(Department_Table instance);
    partial void UpdateDepartment_Table(Department_Table instance);
    partial void DeleteDepartment_Table(Department_Table instance);
    partial void InsertEmployee_Table(Employee_Table instance);
    partial void UpdateEmployee_Table(Employee_Table instance);
    partial void DeleteEmployee_Table(Employee_Table instance);
    partial void InsertJob_Table(Job_Table instance);
    partial void UpdateJob_Table(Job_Table instance);
    partial void DeleteJob_Table(Job_Table instance);
    partial void InsertOperator_Table(Operator_Table instance);
    partial void UpdateOperator_Table(Operator_Table instance);
    partial void DeleteOperator_Table(Operator_Table instance);
    partial void InsertPayslip_Table(Payslip_Table instance);
    partial void UpdatePayslip_Table(Payslip_Table instance);
    partial void DeletePayslip_Table(Payslip_Table instance);
    #endregion
		
		public SalarySlipAppDBMLDataContext() : 
				base(global::Salary_Slip_App.Properties.Settings.Default.SalarySlipAppConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SalarySlipAppDBMLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SalarySlipAppDBMLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SalarySlipAppDBMLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SalarySlipAppDBMLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department_Table> Department_Tables
		{
			get
			{
				return this.GetTable<Department_Table>();
			}
		}
		
		public System.Data.Linq.Table<Employee_Table> Employee_Tables
		{
			get
			{
				return this.GetTable<Employee_Table>();
			}
		}
		
		public System.Data.Linq.Table<Job_Table> Job_Tables
		{
			get
			{
				return this.GetTable<Job_Table>();
			}
		}
		
		public System.Data.Linq.Table<Operator_Table> Operator_Tables
		{
			get
			{
				return this.GetTable<Operator_Table>();
			}
		}
		
		public System.Data.Linq.Table<Payslip_Table> Payslip_Tables
		{
			get
			{
				return this.GetTable<Payslip_Table>();
			}
		}
		
		public System.Data.Linq.Table<DashboardView> DashboardViews
		{
			get
			{
				return this.GetTable<DashboardView>();
			}
		}
		
		public System.Data.Linq.Table<DepartmentView> DepartmentViews
		{
			get
			{
				return this.GetTable<DepartmentView>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeView> EmployeeViews
		{
			get
			{
				return this.GetTable<EmployeeView>();
			}
		}
		
		public System.Data.Linq.Table<PayslipView> PayslipViews
		{
			get
			{
				return this.GetTable<PayslipView>();
			}
		}
		
		public System.Data.Linq.Table<PayslipViewReport> PayslipViewReports
		{
			get
			{
				return this.GetTable<PayslipViewReport>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.tryLogin")]
		public int tryLogin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="USER", DbType="VarChar(255)")] string uSER, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PASS", DbType="VarChar(255)")] string pASS)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uSER, pASS);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department_Table")]
	public partial class Department_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _managerId;
		
		private EntitySet<Employee_Table> _Employee_Tables;
		
		private EntityRef<Employee_Table> _Employee_Table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmanagerIdChanging(int value);
    partial void OnmanagerIdChanged();
    #endregion
		
		public Department_Table()
		{
			this._Employee_Tables = new EntitySet<Employee_Table>(new Action<Employee_Table>(this.attach_Employee_Tables), new Action<Employee_Table>(this.detach_Employee_Tables));
			this._Employee_Table = default(EntityRef<Employee_Table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_managerId", DbType="Int NOT NULL")]
		public int managerId
		{
			get
			{
				return this._managerId;
			}
			set
			{
				if ((this._managerId != value))
				{
					if (this._Employee_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmanagerIdChanging(value);
					this.SendPropertyChanging();
					this._managerId = value;
					this.SendPropertyChanged("managerId");
					this.OnmanagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Table_Employee_Table", Storage="_Employee_Tables", ThisKey="id", OtherKey="deptID")]
		public EntitySet<Employee_Table> Employee_Tables
		{
			get
			{
				return this._Employee_Tables;
			}
			set
			{
				this._Employee_Tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Table_Department_Table", Storage="_Employee_Table", ThisKey="managerId", OtherKey="id", IsForeignKey=true)]
		public Employee_Table Employee_Table
		{
			get
			{
				return this._Employee_Table.Entity;
			}
			set
			{
				Employee_Table previousValue = this._Employee_Table.Entity;
				if (((previousValue != value) 
							|| (this._Employee_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee_Table.Entity = null;
						previousValue.Department_Tables.Remove(this);
					}
					this._Employee_Table.Entity = value;
					if ((value != null))
					{
						value.Department_Tables.Add(this);
						this._managerId = value.id;
					}
					else
					{
						this._managerId = default(int);
					}
					this.SendPropertyChanged("Employee_Table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee_Tables(Employee_Table entity)
		{
			this.SendPropertyChanging();
			entity.Department_Table = this;
		}
		
		private void detach_Employee_Tables(Employee_Table entity)
		{
			this.SendPropertyChanging();
			entity.Department_Table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_Table")]
	public partial class Employee_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _phoneNumber;
		
		private int _jobID;
		
		private int _deptID;
		
		private string _address;
		
		private bool _status;
		
		private EntitySet<Department_Table> _Department_Tables;
		
		private EntitySet<Payslip_Table> _Payslip_Tables;
		
		private EntityRef<Department_Table> _Department_Table;
		
		private EntityRef<Job_Table> _Job_Table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OnjobIDChanging(int value);
    partial void OnjobIDChanged();
    partial void OndeptIDChanging(int value);
    partial void OndeptIDChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public Employee_Table()
		{
			this._Department_Tables = new EntitySet<Department_Table>(new Action<Department_Table>(this.attach_Department_Tables), new Action<Department_Table>(this.detach_Department_Tables));
			this._Payslip_Tables = new EntitySet<Payslip_Table>(new Action<Payslip_Table>(this.attach_Payslip_Tables), new Action<Payslip_Table>(this.detach_Payslip_Tables));
			this._Department_Table = default(EntityRef<Department_Table>);
			this._Job_Table = default(EntityRef<Job_Table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobID", DbType="Int NOT NULL")]
		public int jobID
		{
			get
			{
				return this._jobID;
			}
			set
			{
				if ((this._jobID != value))
				{
					if (this._Job_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobIDChanging(value);
					this.SendPropertyChanging();
					this._jobID = value;
					this.SendPropertyChanged("jobID");
					this.OnjobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deptID", DbType="Int NOT NULL")]
		public int deptID
		{
			get
			{
				return this._deptID;
			}
			set
			{
				if ((this._deptID != value))
				{
					if (this._Department_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndeptIDChanging(value);
					this.SendPropertyChanging();
					this._deptID = value;
					this.SendPropertyChanged("deptID");
					this.OndeptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Table_Department_Table", Storage="_Department_Tables", ThisKey="id", OtherKey="managerId")]
		public EntitySet<Department_Table> Department_Tables
		{
			get
			{
				return this._Department_Tables;
			}
			set
			{
				this._Department_Tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Table_Payslip_Table", Storage="_Payslip_Tables", ThisKey="id", OtherKey="employeeID")]
		public EntitySet<Payslip_Table> Payslip_Tables
		{
			get
			{
				return this._Payslip_Tables;
			}
			set
			{
				this._Payslip_Tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Table_Employee_Table", Storage="_Department_Table", ThisKey="deptID", OtherKey="id", IsForeignKey=true)]
		public Department_Table Department_Table
		{
			get
			{
				return this._Department_Table.Entity;
			}
			set
			{
				Department_Table previousValue = this._Department_Table.Entity;
				if (((previousValue != value) 
							|| (this._Department_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department_Table.Entity = null;
						previousValue.Employee_Tables.Remove(this);
					}
					this._Department_Table.Entity = value;
					if ((value != null))
					{
						value.Employee_Tables.Add(this);
						this._deptID = value.id;
					}
					else
					{
						this._deptID = default(int);
					}
					this.SendPropertyChanged("Department_Table");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Table_Employee_Table", Storage="_Job_Table", ThisKey="jobID", OtherKey="id", IsForeignKey=true)]
		public Job_Table Job_Table
		{
			get
			{
				return this._Job_Table.Entity;
			}
			set
			{
				Job_Table previousValue = this._Job_Table.Entity;
				if (((previousValue != value) 
							|| (this._Job_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job_Table.Entity = null;
						previousValue.Employee_Tables.Remove(this);
					}
					this._Job_Table.Entity = value;
					if ((value != null))
					{
						value.Employee_Tables.Add(this);
						this._jobID = value.id;
					}
					else
					{
						this._jobID = default(int);
					}
					this.SendPropertyChanged("Job_Table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Department_Tables(Department_Table entity)
		{
			this.SendPropertyChanging();
			entity.Employee_Table = this;
		}
		
		private void detach_Department_Tables(Department_Table entity)
		{
			this.SendPropertyChanging();
			entity.Employee_Table = null;
		}
		
		private void attach_Payslip_Tables(Payslip_Table entity)
		{
			this.SendPropertyChanging();
			entity.Employee_Table = this;
		}
		
		private void detach_Payslip_Tables(Payslip_Table entity)
		{
			this.SendPropertyChanging();
			entity.Employee_Table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job_Table")]
	public partial class Job_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private decimal _baseSalary;
		
		private decimal _healthInsurance;
		
		private decimal _employmentInsurance;
		
		private EntitySet<Employee_Table> _Employee_Tables;
		
		private EntitySet<Payslip_Table> _Payslip_Tables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbaseSalaryChanging(decimal value);
    partial void OnbaseSalaryChanged();
    partial void OnhealthInsuranceChanging(decimal value);
    partial void OnhealthInsuranceChanged();
    partial void OnemploymentInsuranceChanging(decimal value);
    partial void OnemploymentInsuranceChanged();
    #endregion
		
		public Job_Table()
		{
			this._Employee_Tables = new EntitySet<Employee_Table>(new Action<Employee_Table>(this.attach_Employee_Tables), new Action<Employee_Table>(this.detach_Employee_Tables));
			this._Payslip_Tables = new EntitySet<Payslip_Table>(new Action<Payslip_Table>(this.attach_Payslip_Tables), new Action<Payslip_Table>(this.detach_Payslip_Tables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_baseSalary", DbType="Money NOT NULL")]
		public decimal baseSalary
		{
			get
			{
				return this._baseSalary;
			}
			set
			{
				if ((this._baseSalary != value))
				{
					this.OnbaseSalaryChanging(value);
					this.SendPropertyChanging();
					this._baseSalary = value;
					this.SendPropertyChanged("baseSalary");
					this.OnbaseSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_healthInsurance", DbType="Money NOT NULL")]
		public decimal healthInsurance
		{
			get
			{
				return this._healthInsurance;
			}
			set
			{
				if ((this._healthInsurance != value))
				{
					this.OnhealthInsuranceChanging(value);
					this.SendPropertyChanging();
					this._healthInsurance = value;
					this.SendPropertyChanged("healthInsurance");
					this.OnhealthInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employmentInsurance", DbType="Money NOT NULL")]
		public decimal employmentInsurance
		{
			get
			{
				return this._employmentInsurance;
			}
			set
			{
				if ((this._employmentInsurance != value))
				{
					this.OnemploymentInsuranceChanging(value);
					this.SendPropertyChanging();
					this._employmentInsurance = value;
					this.SendPropertyChanged("employmentInsurance");
					this.OnemploymentInsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Table_Employee_Table", Storage="_Employee_Tables", ThisKey="id", OtherKey="jobID")]
		public EntitySet<Employee_Table> Employee_Tables
		{
			get
			{
				return this._Employee_Tables;
			}
			set
			{
				this._Employee_Tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Table_Payslip_Table", Storage="_Payslip_Tables", ThisKey="id", OtherKey="jobIdBasic")]
		public EntitySet<Payslip_Table> Payslip_Tables
		{
			get
			{
				return this._Payslip_Tables;
			}
			set
			{
				this._Payslip_Tables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee_Tables(Employee_Table entity)
		{
			this.SendPropertyChanging();
			entity.Job_Table = this;
		}
		
		private void detach_Employee_Tables(Employee_Table entity)
		{
			this.SendPropertyChanging();
			entity.Job_Table = null;
		}
		
		private void attach_Payslip_Tables(Payslip_Table entity)
		{
			this.SendPropertyChanging();
			entity.Job_Table = this;
		}
		
		private void detach_Payslip_Tables(Payslip_Table entity)
		{
			this.SendPropertyChanging();
			entity.Job_Table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Operator_Table")]
	public partial class Operator_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _password;
		
		private bool _status;
		
		private EntitySet<Payslip_Table> _Payslip_Tables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public Operator_Table()
		{
			this._Payslip_Tables = new EntitySet<Payslip_Table>(new Action<Payslip_Table>(this.attach_Payslip_Tables), new Action<Payslip_Table>(this.detach_Payslip_Tables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_Table_Payslip_Table", Storage="_Payslip_Tables", ThisKey="id", OtherKey="operatorID")]
		public EntitySet<Payslip_Table> Payslip_Tables
		{
			get
			{
				return this._Payslip_Tables;
			}
			set
			{
				this._Payslip_Tables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payslip_Tables(Payslip_Table entity)
		{
			this.SendPropertyChanging();
			entity.Operator_Table = this;
		}
		
		private void detach_Payslip_Tables(Payslip_Table entity)
		{
			this.SendPropertyChanging();
			entity.Operator_Table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payslip_Table")]
	public partial class Payslip_Table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _employeeID;
		
		private int _operatorID;
		
		private System.DateTime _year;
		
		private System.DateTime _month;
		
		private int _jobIdBasic;
		
		private decimal _totalAllowance;
		
		private decimal _totalDeduction;
		
		private decimal _netSalary;
		
		private bool _status;
		
		private EntityRef<Employee_Table> _Employee_Table;
		
		private EntityRef<Job_Table> _Job_Table;
		
		private EntityRef<Operator_Table> _Operator_Table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OnoperatorIDChanging(int value);
    partial void OnoperatorIDChanged();
    partial void OnyearChanging(System.DateTime value);
    partial void OnyearChanged();
    partial void OnmonthChanging(System.DateTime value);
    partial void OnmonthChanged();
    partial void OnjobIdBasicChanging(int value);
    partial void OnjobIdBasicChanged();
    partial void OntotalAllowanceChanging(decimal value);
    partial void OntotalAllowanceChanged();
    partial void OntotalDeductionChanging(decimal value);
    partial void OntotalDeductionChanged();
    partial void OnnetSalaryChanging(decimal value);
    partial void OnnetSalaryChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public Payslip_Table()
		{
			this._Employee_Table = default(EntityRef<Employee_Table>);
			this._Job_Table = default(EntityRef<Job_Table>);
			this._Operator_Table = default(EntityRef<Operator_Table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					if (this._Employee_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorID", DbType="Int NOT NULL")]
		public int operatorID
		{
			get
			{
				return this._operatorID;
			}
			set
			{
				if ((this._operatorID != value))
				{
					if (this._Operator_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnoperatorIDChanging(value);
					this.SendPropertyChanging();
					this._operatorID = value;
					this.SendPropertyChanged("operatorID");
					this.OnoperatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Date NOT NULL")]
		public System.DateTime year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="Date NOT NULL")]
		public System.DateTime month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobIdBasic", DbType="Int NOT NULL")]
		public int jobIdBasic
		{
			get
			{
				return this._jobIdBasic;
			}
			set
			{
				if ((this._jobIdBasic != value))
				{
					if (this._Job_Table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjobIdBasicChanging(value);
					this.SendPropertyChanging();
					this._jobIdBasic = value;
					this.SendPropertyChanged("jobIdBasic");
					this.OnjobIdBasicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalAllowance", DbType="Money NOT NULL")]
		public decimal totalAllowance
		{
			get
			{
				return this._totalAllowance;
			}
			set
			{
				if ((this._totalAllowance != value))
				{
					this.OntotalAllowanceChanging(value);
					this.SendPropertyChanging();
					this._totalAllowance = value;
					this.SendPropertyChanged("totalAllowance");
					this.OntotalAllowanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalDeduction", DbType="Money NOT NULL")]
		public decimal totalDeduction
		{
			get
			{
				return this._totalDeduction;
			}
			set
			{
				if ((this._totalDeduction != value))
				{
					this.OntotalDeductionChanging(value);
					this.SendPropertyChanging();
					this._totalDeduction = value;
					this.SendPropertyChanged("totalDeduction");
					this.OntotalDeductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netSalary", DbType="Money NOT NULL")]
		public decimal netSalary
		{
			get
			{
				return this._netSalary;
			}
			set
			{
				if ((this._netSalary != value))
				{
					this.OnnetSalaryChanging(value);
					this.SendPropertyChanging();
					this._netSalary = value;
					this.SendPropertyChanged("netSalary");
					this.OnnetSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Table_Payslip_Table", Storage="_Employee_Table", ThisKey="employeeID", OtherKey="id", IsForeignKey=true)]
		public Employee_Table Employee_Table
		{
			get
			{
				return this._Employee_Table.Entity;
			}
			set
			{
				Employee_Table previousValue = this._Employee_Table.Entity;
				if (((previousValue != value) 
							|| (this._Employee_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee_Table.Entity = null;
						previousValue.Payslip_Tables.Remove(this);
					}
					this._Employee_Table.Entity = value;
					if ((value != null))
					{
						value.Payslip_Tables.Add(this);
						this._employeeID = value.id;
					}
					else
					{
						this._employeeID = default(int);
					}
					this.SendPropertyChanged("Employee_Table");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Table_Payslip_Table", Storage="_Job_Table", ThisKey="jobIdBasic", OtherKey="id", IsForeignKey=true)]
		public Job_Table Job_Table
		{
			get
			{
				return this._Job_Table.Entity;
			}
			set
			{
				Job_Table previousValue = this._Job_Table.Entity;
				if (((previousValue != value) 
							|| (this._Job_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job_Table.Entity = null;
						previousValue.Payslip_Tables.Remove(this);
					}
					this._Job_Table.Entity = value;
					if ((value != null))
					{
						value.Payslip_Tables.Add(this);
						this._jobIdBasic = value.id;
					}
					else
					{
						this._jobIdBasic = default(int);
					}
					this.SendPropertyChanged("Job_Table");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Operator_Table_Payslip_Table", Storage="_Operator_Table", ThisKey="operatorID", OtherKey="id", IsForeignKey=true)]
		public Operator_Table Operator_Table
		{
			get
			{
				return this._Operator_Table.Entity;
			}
			set
			{
				Operator_Table previousValue = this._Operator_Table.Entity;
				if (((previousValue != value) 
							|| (this._Operator_Table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Operator_Table.Entity = null;
						previousValue.Payslip_Tables.Remove(this);
					}
					this._Operator_Table.Entity = value;
					if ((value != null))
					{
						value.Payslip_Tables.Add(this);
						this._operatorID = value.id;
					}
					else
					{
						this._operatorID = default(int);
					}
					this.SendPropertyChanged("Operator_Table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DashboardView")]
	public partial class DashboardView
	{
		
		private System.Nullable<int> _Year;
		
		private string _Month;
		
		private System.Nullable<int> _Payslip_Amount;
		
		private System.Nullable<decimal> _Total_Expense;
		
		public DashboardView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NVarChar(4000)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Payslip Amount]", Storage="_Payslip_Amount", DbType="Int")]
		public System.Nullable<int> Payslip_Amount
		{
			get
			{
				return this._Payslip_Amount;
			}
			set
			{
				if ((this._Payslip_Amount != value))
				{
					this._Payslip_Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Expense]", Storage="_Total_Expense", DbType="Money")]
		public System.Nullable<decimal> Total_Expense
		{
			get
			{
				return this._Total_Expense;
			}
			set
			{
				if ((this._Total_Expense != value))
				{
					this._Total_Expense = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepartmentView")]
	public partial class DepartmentView
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Manager;
		
		public DepartmentView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this._Manager = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeView")]
	public partial class EmployeeView
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Phone;
		
		private string _Address;
		
		private string _Department;
		
		private string _Job;
		
		private bool _Status;
		
		public EmployeeView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this._Job = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayslipView")]
	public partial class PayslipView
	{
		
		private int _ID;
		
		private string _Employee;
		
		private string _Operator;
		
		private System.DateTime _Year;
		
		private System.DateTime _Month;
		
		private decimal _Base_Salary;
		
		private decimal _Total_Allowance;
		
		private decimal _Total_Deduction;
		
		private decimal _Net_Salary;
		
		private bool _Status;
		
		public PayslipView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this._Employee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this._Operator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Date NOT NULL")]
		public System.DateTime Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Date NOT NULL")]
		public System.DateTime Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Base Salary]", Storage="_Base_Salary", DbType="Money NOT NULL")]
		public decimal Base_Salary
		{
			get
			{
				return this._Base_Salary;
			}
			set
			{
				if ((this._Base_Salary != value))
				{
					this._Base_Salary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Allowance]", Storage="_Total_Allowance", DbType="Money NOT NULL")]
		public decimal Total_Allowance
		{
			get
			{
				return this._Total_Allowance;
			}
			set
			{
				if ((this._Total_Allowance != value))
				{
					this._Total_Allowance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Deduction]", Storage="_Total_Deduction", DbType="Money NOT NULL")]
		public decimal Total_Deduction
		{
			get
			{
				return this._Total_Deduction;
			}
			set
			{
				if ((this._Total_Deduction != value))
				{
					this._Total_Deduction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Net Salary]", Storage="_Net_Salary", DbType="Money NOT NULL")]
		public decimal Net_Salary
		{
			get
			{
				return this._Net_Salary;
			}
			set
			{
				if ((this._Net_Salary != value))
				{
					this._Net_Salary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayslipViewReport")]
	public partial class PayslipViewReport
	{
		
		private int _ID;
		
		private string _Employee;
		
		private string _Operator;
		
		private System.DateTime _Year;
		
		private System.DateTime _Month;
		
		private decimal _BaseSalary;
		
		private decimal _TotalAllowance;
		
		private decimal _TotalDeduction;
		
		private decimal _NetSalary;
		
		private bool _Status;
		
		public PayslipViewReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this._Employee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operator", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this._Operator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Date NOT NULL")]
		public System.DateTime Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Date NOT NULL")]
		public System.DateTime Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this._Month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseSalary", DbType="Money NOT NULL")]
		public decimal BaseSalary
		{
			get
			{
				return this._BaseSalary;
			}
			set
			{
				if ((this._BaseSalary != value))
				{
					this._BaseSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAllowance", DbType="Money NOT NULL")]
		public decimal TotalAllowance
		{
			get
			{
				return this._TotalAllowance;
			}
			set
			{
				if ((this._TotalAllowance != value))
				{
					this._TotalAllowance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDeduction", DbType="Money NOT NULL")]
		public decimal TotalDeduction
		{
			get
			{
				return this._TotalDeduction;
			}
			set
			{
				if ((this._TotalDeduction != value))
				{
					this._TotalDeduction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetSalary", DbType="Money NOT NULL")]
		public decimal NetSalary
		{
			get
			{
				return this._NetSalary;
			}
			set
			{
				if ((this._NetSalary != value))
				{
					this._NetSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
